{"version":3,"sources":["api/unsplash.js","components/SearchBar.js","components/ImageCard.js","components/ImageList.js","components/App.js","index.js"],"names":["axios","create","baseURL","headers","Authorization","pageControl","SearchBar","state","term","page","onFormSubmit","e","preventDefault","_this","props","onSubmit","updatePageNumber","_callee","button","regenerator_default","a","wrap","_context","prev","next","setState","stop","_this2","this","react_default","createElement","className","style","marginBottom","type","value","onChange","target","onClick","React","Component","ImageCard","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setSpans","imageRef","current","height","clientHeight","spans","Math","ceil","createRef","addEventListener","_this$props$image","image","description","urls","gridRowEnd","concat","ref","alt","src","regular","ImageList","images","length","nenhumaRequest","map","img","components_ImageCard","key","id","App","onSearchSubmit","response","Unsplash","get","params","query","per_page","sent","data","results","marginTop","components_SearchBar","src_components_ImageList","ReactDOM","render","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.67b8eef8.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n    \n    baseURL: 'https://api.unsplash.com',\n\n    // docs: https://unsplash.com/documentation\n    headers: {\n        // Chave de autorização\n        Authorization: 'Client-ID 8a36e3f78196ba7dbe3dd40ac18cc677249845001c5ebb7c9ea0edb8cf77edf0'\n    }\n});","import React from 'react';\n\nlet pageControl = 1,\n    buttonNext = 1,\n    buttonPrevious = 2;\n\nclass SearchBar extends React.Component {\n    state = { term: '', page: pageControl }\n    onFormSubmit = (e) => {\n\n        e.preventDefault();\n\n        this.props.onSubmit(this.state.term);\n    }\n\n    updatePageNumber = async (button) => {\n        if (button === 1) {\n            pageControl += 1;\n        }\n        if (button === 2) {\n            pageControl = pageControl === 1 ? 1 : pageControl -= 1;\n        }\n        await this.setState({ page: pageControl })\n        this.props.onSubmit(this.state.term, this.state.page);\n    }\n\n    render() {\n        return (\n            <div className=\"ui segment\">\n                <form className=\"ui form\" style={{marginBottom: \"10px\"}} onSubmit={this.onFormSubmit}>\n                    <div className=\"field\">\n                        <label><h3>Image Search</h3></label>\n                        <input type=\"text\" value={this.state.term} onChange={(e) => this.setState({ term: e.target.value })} />\n                    </div>\n                </form>\n                <div className=\"ui fluid buttons\">\n                    <button onClick={() => this.updatePageNumber(buttonPrevious)} className=\"ui labeled icon large button\">\n                        <i className=\"left chevron icon\"></i>\n                        Previous page\n                </button>\n                    <button onClick={() => this.updatePageNumber(buttonNext)} className=\"ui right labeled icon large button\">\n                        Next page\n                    <i className=\"right chevron icon\"></i>\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SearchBar;","import React from 'react';\n\nclass ImageCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { spans: 0 };\n        this.imageRef = React.createRef();\n    }\n\n    componentDidMount() {\n        this.imageRef.current.addEventListener('load', this.setSpans);\n    }\n\n    setSpans = () => {\n        if (this.imageRef.current !== null) {\n            const height = this.imageRef.current.clientHeight;\n            const spans = Math.ceil(height / 10);\n            this.setState({ spans });\n        }\n    }\n\n    render() {\n        const { description, urls } = this.props.image\n        return (\n            <div style={{ gridRowEnd: `span ${this.state.spans}` }} >\n                <img ref={this.imageRef} alt={description} src={urls.regular} />\n            </div>\n        );\n    }\n}\n\nexport default ImageCard;","import React from 'react';\nimport './ImageList.css';\nimport ImageCard from './ImageCard'\n\nconst ImageList = (props) => {\n    if (props.images.length === 0 && props.nenhumaRequest) {\n        return (\n            <div className=\"ui segment\">\n                <h3>Faça uma pesquisa!</h3>\n            </div>\n        );\n    } else if (props.images.length === 0 && !props.nenhumaRequest) {\n        return (\n            <div className=\"ui segment\">\n                <h3>Não há mais resultados</h3>\n            </div>\n        );\n    } else return (\n        <div className=\"image-list\">{props.images.map((img) => <ImageCard key={img.id} image={img} />)}</div>\n    );\n}\n\nexport default ImageList;","// Importar pacotes e dependências\nimport React from 'react';\nimport Unsplash from '../api/unsplash'\n\n// Importar componentes\nimport SearchBar from './SearchBar';\nimport ImageList from './ImageList'\n\nclass App extends React.Component {\n    state = { images: [], nenhumaRequest: true};\n    onSearchSubmit = async (term, page) => {\n        const response = await Unsplash.get('/search/photos', {\n            // Especifica os parametros que serão recebidos pela API\n            params: { query: term, per_page: 50, page: page }\n        });\n\n        this.setState({ images: response.data.results, nenhumaRequest: false });\n    };\n\n    render() {\n        return (\n            <div className=\"ui container\" style={{ marginTop: '10px' }}>\n                <SearchBar onSubmit={this.onSearchSubmit} />\n                <ImageList images={this.state.images} nenhumaRequest = {this.state.nenhumaRequest} />\n            </div>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App'\n\n\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));"],"sourceRoot":""}